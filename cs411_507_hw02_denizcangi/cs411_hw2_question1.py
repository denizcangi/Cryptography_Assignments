# -*- coding: utf-8 -*-
"""cs411_hw2_question1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dCKvGUiG-VB13yR4y3gFjO4LDskX7XoN
"""

import random
import requests

API_URL = 'http://cryptlygos.pythonanywhere.com' #DON'T Change this
my_id = 25427  # CHANGE this into your ID number

#server communication. Try to get p and t
endpoint = '{}/{}/{}'.format(API_URL, "q1", my_id )
response = requests.get(endpoint) 	
p = 0
t = 0
if response.ok:	
  res = response.json()
  print(res)
  p, t = res['p'], res['t']		#p is your prime number. t is the order of a subgroup. USE THESE TO SOLVE THE QUESTION
else:
  print(response.json())

##SOLUTION   

def primitive_element():
  
  primitive_element = 0
  possible_primitive_elements = list(range(1,p))

  g=1
  flag = True

  while g < p and flag == True:
    list_of_pow = []

    for n in range(1,p):
      list_of_pow.append((g**n)%p)

      if (g**n)%p == 1 and n == p-1:

        if sorted(list_of_pow) == possible_primitive_elements:
          primitive_element = g
          flag= False
          break

      elif (g**n) % p == 1:
        break  

    g+=1

  print(primitive_element)
  return primitive_element

def find_subgroup():
  
  list_elements = list(range(1,p))
  
  for element in list_elements:
    subgroup_elements = []
    n=1
    temp = element

    while temp not in subgroup_elements:
      subgroup_elements.append(temp)
      n = n+1
      temp = (element**n)%p
    
    if len(subgroup_elements) == t:
      print(element, subgroup_elements)
      return element



##END OF SOLUTION

g = primitive_element() 		#ATTN: change this into generator you found
gH = find_subgroup()		#ATTN: change this into generator of the subgroup you found


#You can CHECK result of PART A here
endpoint = '{}/{}/{}/{}'.format(API_URL, "q1ac", my_id, g)
response = requests.put(endpoint) 	
print(response.json())


#You can CHECK result of PART B here
endpoint = '{}/{}/{}/{}'.format(API_URL, "q1bc", my_id, gH )	#gH is generator of your subgroup
response = requests.put(endpoint) 	#check result
print(response.json())