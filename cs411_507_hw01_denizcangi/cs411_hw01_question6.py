# -*- coding: utf-8 -*-
"""cs411_hw01_question6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17O2vQIU2o6vspKg0RXSMr6MRQcxIWr_r
"""

uppercase ={'A':0, 'B':1, 'C':2, 'D':3, 'E':4, 'F':5, 'G':6, 'H':7, 'I':8,
         'J':9, 'K':10, 'L':11, 'M':12, 'N':13, 'O':14, 'P':15, 'Q':16,
         'R':17, 'S':18,  'T':19, 'U':20, 'V':21, 'W':22, 'X':23, 'Y':24,
         'Z':25}
inv_uppercase = {0:'A', 1:'B', 2:'C', 3:'D', 4:'E', 5:'F', 6:'G', 7:'H',
                 8:'I', 9:'J', 10:'K', 11:'L', 12:'M', 13:'N', 14:'O', 15:'P',
                 16:'Q', 17:'R', 18:'S', 19:'T', 20:'U', 21:'V', 22:'W', 23:'X',
                 24:'Y', 25:'Z'}

textpart= "ERKAY SAVAS" #known plaintext
ciphertextpart= "EXEPY LABUH" #corresponding ciphertext
ciphertext="JYPR LTAXTNM, SOGELBCONN IL TNY ZER TU VGIELOUCCX, EXEPY LABUH"

listOfKeys=[] 

for i in range(len(textpart)): #find the keys 
  if textpart[i] in uppercase:
    key = (uppercase[ciphertextpart[i]] - uppercase[textpart[i]])%26
    listOfKeys.append(key)

print("Possible list of keys are", listOfKeys)

lengthOfText= 0
for char in range(len(ciphertext)):
  if ciphertext[char] in uppercase:
    lengthOfText+=1

print("The length of text is", lengthOfText)

#from the pattern of listOfKeys = [0, 6, 20, 15, 0, 19, 0, 6, 20, 15] we can observe that the key should be length 6
#because 6, 20, 15 appears twice and the difference between the indices is 6.

remainder= lengthOfText%6

#so when we take mod 6 of 51 which is 3, we can observe that the last 3 numbers of the listOfKey is the beginning of the actual key
#so the first 3 numbers of the key is 6, 20, 15 and rest is 0, 19, 0 as we can observe from the pattern.


key = [6,20,15,0,19,0]

print("Key is", key)

decode_key = ""
for i in key:
  decode_key += inv_uppercase[i]

print("Then we decode in alphabet, the key is", decode_key)
print()

plaintext = ""

keyindex=0

for i in range(len(ciphertext)):

  if ciphertext[i] in uppercase: #decode the ciphertext letters
    
    findthenum= (uppercase[ciphertext[i]] - key[keyindex % len(key)]) % 26 #find the encode of the plaintext letter in alphabet

    plaintextletter = inv_uppercase[findthenum]
    plaintext += plaintextletter
    keyindex+=1 #we used key so we increase the keyindex by 1

  else: #if they are not letters just add them to the plaintext
    plaintext += ciphertext[i]

print("The decyrpted plaintext is:", plaintext)